query Products($active: Boolean!, $start_date: timestamp!) {
  product(where: { active: { _eq: $active } }) {
    id
    code
    name
    price
    stock
    active
    image
    min_quantity
    max_quantity
    brand {
      id
      name
    }
    category {
      id
      name
    }
    created_by {
      id
      name
    }
    updated_by{
      id
      name
    }
    inventory_movement_lines_aggregate(where: {inventory_movement: {confirmation_date: {_gte: $start_date, _lte: "now()"}}, movement_type: {_eq: "V"}}) {
      aggregate {
        sum {
          quantity
        }
      }
    }
    inventory_movement_lines(where: {inventory_movement: {confirmation_date: {_is_null: false}, type: {_eq: "C"}}}, order_by: {inventory_movement: {date: desc}}, limit: 1){
      inventory_movement {
        date
        confirmation_date
      }
    }
  }
}

mutation CreateProduct(
  $name: String
  $code: String
  $price: money
  $user: Int
  $brand: Int
  $category: Int
  $minQuantity: Int
  $maxQuantity: Int
) {
  insert_product_one(
    object: {
      name: $name
      price: $price
      code: $code
      category_id: $category
      brand_id: $brand
      min_quantity: $minQuantity
      max_quantity: $maxQuantity
      last_updated_by_id: $user
      created_by_id: $user
    }
  ) {
    id
  }
}


mutation EditProduct(
  $id: Int
  $name: String
  $code: String
  $price: money
  $user: Int
  $brand: Int
  $category: Int
  $minQuantity: Int
  $maxQuantity: Int
) {
  update_product(
    where: { id: { _eq: $id } }
    _set: {
      code: $code
      name: $name
      price: $price
      category_id: $category
      min_quantity: $minQuantity
      max_quantity: $maxQuantity
      brand_id: $brand
      last_updated_by_id: $user
    }
  ) {
    affected_rows
  }
}


mutation EditProductImage(
  $id: Int
  $image: String
  $user: Int
  ) {
  update_product(
  where: { id: { _eq: $id } }
  _set: {
  image: $image
  last_updated_by_id: $user
  }
  ) {
  affected_rows
  }
}

mutation UpdateProductQuantity(
  $id: Int
  $quantity: Int
  $user: Int
) {
  update_product(
    where: { id: { _eq: $id } }
    _set: {
      stock: $quantity
      last_updated_by_id: $user
    }
  ) {
    affected_rows
  }
}

mutation DeleteProduct($id: Int, $user: Int, $active: Boolean) {
  update_product(
    where: { id: { _eq: $id } }
    _set: { active: $active, last_updated_by_id: $user }
  ) {
    affected_rows
  }
}
